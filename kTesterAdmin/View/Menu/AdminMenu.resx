<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="logs_metroTile.TileImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        RU5ErkJggg==
</value>
  </data>
</root>